name: Deploy Apigee API from OpenAPI Spec

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual triggering of the workflow

env:
  APIGEE_ENV: dev
  APIGEE_PROXY_NAME: oasapi2
  APIGEE_PROXY_BASEPATH: /oasapi2

jobs:
  deploy-oas:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.PROD_WIF_POOL }}
          service_account: ${{ secrets.PROD_SA_EMAIL }}

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x" # Use the latest Python 3 version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt
      
      - name: Install Apigee CLI
        run: |
          curl -L https://raw.githubusercontent.com/apigee/apigeecli/main/downloadLatest.sh | sh -

      - name: Prepare API Bundle
        run: |
          export PATH=$PATH:$HOME/.apigeecli/bin 
          python3 scripts/prepare_bundle.py \
            --apigee_org ${{ secrets.APIGEE_ORG }} \
            --api_name "$APIGEE_PROXY_NAME" \
            --api_base_path "$APIGEE_PROXY_BASEPATH" \
            --oas_file_location . \
            --oas_file_name httpbin.yaml \
            --override_flow_name getUsersGroups \
            --override_sf_name SF-spitfire-pre
  
      - uses: hashicorp/setup-terraform@v3

      - name: Run terraform
        run: |
          cd terraform
          terraform init
          terraform plan \
            -state=$APIGEE_PROXY_NAME.tfstate \
            -var "apigee_org=${{ secrets.APIGEE_ORG }}" \
            -var "apigee_env=$APIGEE_ENV" \
            -var "proxy_name=$APIGEE_PROXY_NAME" \
            -var "proxy_bundle_path=${{ github.workspace }}/$APIGEE_PROXY_NAME"
          terraform apply \
            -state=$APIGEE_PROXY_NAME.tfstate \
            -auto-approve \
            -var "apigee_org=${{ secrets.APIGEE_ORG }}" \
            -var "apigee_env=$APIGEE_ENV" \
            -var "proxy_name=$APIGEE_PROXY_NAME" \
            -var "proxy_bundle_path=${{ github.workspace }}/$APIGEE_PROXY_NAME"
