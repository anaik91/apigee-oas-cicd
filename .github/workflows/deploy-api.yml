name: Deploy Apigee API from OpenAPI Spec

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual triggering of the workflow

env:
  APIGEE_ENV: dev
  TF_HTTP_PASSWORD: ${{ secrets.GH_PAT_TOKEN }}

jobs:
  deploy-oas:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.PROD_WIF_POOL }}
          service_account: ${{ secrets.PROD_SA_EMAIL }}

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x" # Use the latest Python 3 version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r terraform/oas-deployment/scripts/requirements.txt

      - name: Install Apigee CLI
        run: |
          curl -L https://raw.githubusercontent.com/apigee/apigeecli/main/downloadLatest.sh | sh -

      - uses: hashicorp/setup-terraform@v3

      - name: Run terraform
        run: |
          export PATH=$PATH:$HOME/.apigeecli/bin 
          cd terraform
          terraform init
          terraform plan \
            -var "apigee_org=${{ secrets.APIGEE_ORG }}" \
            -var "apigee_env=$APIGEE_ENV" \
            -var "openid_discovery_endpoint=https://${{ secrets.APIGEE_TARGET_SERVER }}/jwks" \
            -var 'target_servers={
                    "user-manager-user-query" = {
                      host        = "${{ secrets.APIGEE_TARGET_SERVER }}"
                      port        = 443
                      protocol    = "HTTP"
                      ssl_enabled = true
                    },
                    "user-manager-user-create" = {
                      host        = "${{ secrets.APIGEE_TARGET_SERVER }}"
                      port        = 443
                      protocol    = "HTTP"
                      ssl_enabled = true
                    },
                    "auth-manager-token-introspect" = {
                      host        = "${{ secrets.APIGEE_TARGET_SERVER }}"
                      port        = 443
                      protocol    = "HTTP"
                      ssl_enabled = true
                    }
                  }'
          terraform apply \
            -auto-approve \
            -var "apigee_org=${{ secrets.APIGEE_ORG }}" \
            -var "apigee_env=$APIGEE_ENV" \
            -var "openid_discovery_endpoint=https://${{ secrets.APIGEE_TARGET_SERVER }}/jwks" \
            -var 'target_servers={
                    "user-manager-user-query" = {
                      host        = "${{ secrets.APIGEE_TARGET_SERVER }}"
                      port        = 443
                      protocol    = "HTTP"
                      ssl_enabled = true
                    },
                    "user-manager-user-create" = {
                      host        = "${{ secrets.APIGEE_TARGET_SERVER }}"
                      port        = 443
                      protocol    = "HTTP"
                      ssl_enabled = true
                    },
                    "auth-manager-token-introspect" = {
                      host        = "${{ secrets.APIGEE_TARGET_SERVER }}"
                      port        = 443
                      protocol    = "HTTP"
                      ssl_enabled = true
                    }
                  }'
